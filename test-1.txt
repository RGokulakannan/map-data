import os
import time
import pandas as pd
from selenium import webdriver
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service


user_name = os.getlogin()

# Function for cookie management
def cookie_management():
    profile = 'Default'
    profile_path = f'C:\\Users\\{user_name}\\AppData\\Local\\Google\\Chrome\\User Data\\Default'
    options = Options()
    options.add_argument('--disable-dev-shm-usage')
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    options.add_argument(f'user-data-dir={profile_path}')
    options.add_argument(f'--profile-directory={profile}')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-gpu')
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    service = Service(f"C:\\Users\\{user_name}\\driver\\chromedriver.exe")
    download_path = "C:\\Users\\"+user_name+"\\Downloads"
    options.add_experimental_option("prefs", {
        "download.default_directory": download_path,
        "download.prompt_for_download": False,
        "download.directory_upgrade": True,
        "safebrowsing.enabled": True
    })
    driver = webdriver.Chrome(service=service, options=options)
    driver.maximize_window()
    return driver

driver = cookie_management()

#Reading PO from excel
df=pd.read_excel(f"input.xlsx")

#Cycle through PO
for a,b in df.iterrows():
    
    print(a, end="-")
    try:
    #Launching the PO
        driver.get(f"https://procurementportal-eu.corp.amazon.com/bp/po?poId={b['po']}&tabId=summary")
        
        #Waiting for update action to visible
        WebDriverWait(driver,40, poll_frequency=1).until(EC.visibility_of_element_located((By.XPATH,"//button[text()='Update Actions']")))
        time.sleep(1)
        driver.find_element(By.XPATH,"//button[text()='Update Actions']").click()
        time.sleep(1)
        driver.find_element(By.XPATH,"//div[text()='Add Items']").click()
        time.sleep(2)
        driver.find_element(By.XPATH,"//input[@placeholder='asin...']").send_keys(b['asin'])
        time.sleep(1)
        driver.find_element(By.XPATH,"//button[text()='Go']").click()
        time.sleep(3)
        WebDriverWait(driver,40, poll_frequency=1).until(EC.visibility_of_element_located((By.ID,"quantity")))
        time.sleep(1)
        driver.find_element(By.ID,"quantity").clear()
        time.sleep(1)
        driver.execute_script("arguments[0].value = arguments[1];", driver.find_element(By.ID,"quantity"), b['qty'])
        time.sleep(1)
        driver.find_element(By.XPATH,"//button[text()='Submit Item']").click()
        time.sleep(5)
        df.at[a, 'status'] = "Added"
    except Exception as e:
        print(f"Error: {e}")
        df.at[a, 'status'] = "Failed"

df.to_excel("output.xlsx", index=False)
driver.quit()

