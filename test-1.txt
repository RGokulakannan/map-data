from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.action_chains import ActionChains

username = os.getlogin()

def cookie_management():
    profile = 'Default'
    profile_path = f'C:\\Users\\{username}\\AppData\\Local\\Google\\Chrome\\User Data\\Default'
    options = Options()
    options.add_argument('--disable-dev-shm-usage')
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    options.add_argument(f'user-data-dir={profile_path}')
    options.add_argument(f'--profile-directory={profile}')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-gpu')
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    service = Service("C:\\Users\\"+username+"\\driver\\chromedriver.exe")
    download_path = "C:\\Users\\"+username+"\\Desktop\\CPLAN\\Downloads"
    options.add_experimental_option("prefs",
    {
        "download.default_directory": download_path,
        "download.prompt_for_download": False,
        "download.directory_upgrade": True,
        "safebrowsing.enabled": True
    })
    driver = webdriver.Chrome(service=service, options=options)
    driver.maximize_window()
    return driver

driver = cookie_management()

# Program begins()
df = pd.read_excel("input.xlsx")

for index, row in df.items():
    driver.get("about:blank")
    driver.get(f"https://procurementportal-eu.corp.amazon.com/bp/po?poId={row['po']}&tabId=summary")
    WebDriverWait(driver, 10, poll_frequency=1).until(EC.visibility_of_element_located((By.XPATH, "//button[text()='Undo']"))).click()
    time.sleep(1)
    bt = driver.find_elements(By.XPATH, "//button[@id='bp_uncomplete_po'][div[not(@class='greytext')]]")
    if bt:
        bt[0].click()
        time.sleep(1)
        WebDriverWait(driver, 10, poll_frequency=1).until(EC.visibility_of_element_located((By.XPATH, "//button[text()='Yes']"))).click()
        time.sleep(3)
        print(f"PO {row['po']} uncompleted successfully.")
    else:
        print(f"PO {row['po']} is already uncompleted or not found.")

driver.quit()
print("All POs processed.")
