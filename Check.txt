import sqlite3
import os
import shutil

from selenium import webdriver
import browser_cookie3
from time import sleep


bot = webdriver.Firefox()
cj = browser_cookie3.firefox()
bot.get('https://midway-auth.amazon.com')
sleep(10)
bot.delete_all_cookies()


def debug_amazon_cookies():
    # Find Firefox profile
    firefox_paths = [
        os.path.expanduser("~/.mozilla/firefox/"),  # Linux
        os.path.expanduser("~\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\"),  # Windows
        os.path.expanduser("~/Library/Application Support/Firefox/Profiles/")  # macOS
    ]
    
    profile_path = None
    for base_path in firefox_paths:
        if os.path.exists(base_path):
            for folder in os.listdir(base_path):
                if 'default' in folder.lower():
                    profile_path = os.path.join(base_path, folder)
                    break
            if profile_path:
                break
    
    if not profile_path:
        print("Firefox profile not found")
        return
    
    cookies_db = os.path.join(profile_path, "cookies.sqlite")
    print(f"Checking: {cookies_db}")
    
    if not os.path.exists(cookies_db):
        print("Cookies database not found")
        return
    
    # Copy to avoid locking
    temp_db = "debug_cookies.sqlite"
    shutil.copy2(cookies_db, temp_db)
    
    try:
        conn = sqlite3.connect(temp_db)
        cursor = conn.cursor()
        
        cursor.execute("""
                    SELECT host, name, value
                    FROM moz_cookies 
                    WHERE LOWER(host) LIKE '%amazon%' OR LOWER(host) LIKE '%amzn%'
                    ORDER BY host, name
                """)
        
        
        
        for host, name, value in cursor.fetchall():
            try:
                if str(host) in ["midway-auth.amazon.com", ".midway-auth.amazon.com", ".amazon.com"]:
                    cookie_dict = {
                                'domain': host,
                                'name': name,
                                'value': value
                                }
                    # 'secure': FX_cookie.secure}
                    bot.add_cookie(cookie_dict)
            except:
                pass
        
        conn.close()
    finally:
        os.remove(temp_db)

debug_amazon_cookies()
print("End")
bot.refresh()
sleep(200)
bot.quit()
